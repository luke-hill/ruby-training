luke@luke-VirtualBox:~/Code/ruby-training/nim/solution/20_percent$ rubocop
rspec
Inspecting 4 files
..CC

Offenses:

lib/nim/game.rb:6:3: C: Style/Documentation: Missing top-level class documentation comment.
  class Game
  ^^^^^
lib/nim/game.rb:13:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if invalid_players?(player_one, player_two)
      ^^
spec/nim/game_spec.rb:5:1: C: Metrics/BlockLength: Block has too many lines. [46/25]
RSpec.describe Nim::Game do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/nim/game_spec.rb:6:3: C: Metrics/BlockLength: Block has too many lines. [44/25]
  describe '#start' do ...
  ^^^^^^^^^^^^^^^^^^^^
spec/nim/game_spec.rb:11:60: C: RSpec/ReturnFromStub: Use and_return for static values.
        allow(game).to receive(:determine_player_one_name) { '' }
                                                           ^
spec/nim/game_spec.rb:12:60: C: RSpec/ReturnFromStub: Use and_return for static values.
        allow(game).to receive(:determine_player_two_name) { '' }
                                                           ^
spec/nim/game_spec.rb:22:60: C: RSpec/ReturnFromStub: Use and_return for static values.
        allow(game).to receive(:determine_player_one_name) { 'Player One' }
                                                           ^
spec/nim/game_spec.rb:23:60: C: RSpec/ReturnFromStub: Use and_return for static values.
        allow(game).to receive(:determine_player_two_name) { '' }
                                                           ^
spec/nim/game_spec.rb:33:60: C: RSpec/ReturnFromStub: Use and_return for static values.
        allow(game).to receive(:determine_player_one_name) { 'Player One' }
                                                           ^
spec/nim/game_spec.rb:34:60: C: RSpec/ReturnFromStub: Use and_return for static values.
        allow(game).to receive(:determine_player_two_name) { 'Player One' }
                                                           ^
spec/nim/game_spec.rb:44:60: C: RSpec/ReturnFromStub: Use and_return for static values.
        allow(game).to receive(:determine_player_one_name) { 'Player One' }
                                                           ^
spec/nim/game_spec.rb:45:60: C: RSpec/ReturnFromStub: Use and_return for static values.
        allow(game).to receive(:determine_player_two_name) { 'Player Two' }
                                                           ^
spec/nim/game_spec.rb:53:34: C: RSpec/ExpectChange: Prefer change(game, :active_player).
        expect { game.start }.to change { game.active_player }.to(:player_one)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

4 files inspected, 13 offenses detected
luke@luke-VirtualBox:~/Code/ruby-training/nim/solution/20_percent$ rspec
......

Finished in 0.01522 seconds (files took 0.11934 seconds to load)
6 examples, 0 failures
